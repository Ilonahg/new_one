from rest_framework.generics import (
    ListAPIView, RetrieveAPIView, CreateAPIView,
    UpdateAPIView, DestroyAPIView
)
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from django.shortcuts import get_object_or_404

from .models import Course, Lesson, Subscription, Payment
from .serializers import CourseSerializer, LessonSerializer
from .services import create_stripe_session
from .tasks import send_course_update_email


# ‚úÖ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤
class CourseListView(ListAPIView):
    queryset = Course.objects.all()
    serializer_class = CourseSerializer
    permission_classes = [IsAuthenticated]


# ‚úÖ –î–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞
class CourseDetailView(RetrieveAPIView):
    queryset = Course.objects.all()
    serializer_class = CourseSerializer
    permission_classes = [IsAuthenticated]


# ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞
class CourseCreateView(CreateAPIView):
    queryset = Course.objects.all()
    serializer_class = CourseSerializer
    permission_classes = [IsAuthenticated]


# ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ (–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
class CourseUpdateView(UpdateAPIView):
    queryset = Course.objects.all()
    serializer_class = CourseSerializer
    permission_classes = [IsAuthenticated]

    def perform_update(self, serializer):
        course = serializer.save()
        # üöÄ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
        send_course_update_email.delay(course.id)


# ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞
class CourseDeleteView(DestroyAPIView):
    queryset = Course.objects.all()
    serializer_class = CourseSerializer
    permission_classes = [IsAuthenticated]


# ‚úÖ –°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤
class LessonListView(ListAPIView):
    queryset = Lesson.objects.all()
    serializer_class = LessonSerializer
    permission_classes = [IsAuthenticated]


# ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–∫–∞
class LessonCreateView(CreateAPIView):
    queryset = Lesson.objects.all()
    serializer_class = LessonSerializer
    permission_classes = [IsAuthenticated]


# ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ / –æ—Ç–ø–∏—Å–∫–∞ –Ω–∞ –∫—É—Ä—Å
class SubscriptionView(APIView):
    permission_classes = [IsAuthenticated]

    def post(self, request):
        course_id = request.data.get("course_id")
        course = get_object_or_404(Course, id=course_id)

        subscription, created = Subscription.objects.get_or_create(
            user=request.user,
            course=course
        )

        if not created:
            subscription.delete()
            message = "–ü–æ–¥–ø–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–∞"
        else:
            message = "–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞"

        return Response({"message": message})


# ‚úÖ –û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞ (Stripe)
class PaymentView(APIView):
    permission_classes = [IsAuthenticated]

    def post(self, request):
        course_id = request.data.get("course_id")
        course = get_object_or_404(Course, id=course_id)

        # –°–æ–∑–¥–∞—ë–º Stripe-—Å–µ—Å—Å–∏—é
        session = create_stripe_session(course)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞—Ç—ë–∂
        payment = Payment.objects.create(
            course=course,
            user=request.user,
            session_id=session.id,
            link=session.url,
            amount=course.price
        )

        return Response({"payment_url": session.url})
